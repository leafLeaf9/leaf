server.port=9998

#jsp location
#spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp

spring.datasource.url = jdbc:mysql://101.132.118.130:3306/gousade?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true
#spring.datasource.url = jdbc:mysql://101.132.118.130:3306/shirotest?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true
spring.datasource.username =root
#spring.datasource.password =root
# 加密后的密码
spring.datasource.password=WOQUNgNkOhqAgVWVQ33Knf2VWoJyKGQeFRbMVraC8IiDPxkSlAQrJNESgmOOAtOYO8EhtrCE+JWj8WKnjQE6FQ==
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 公钥
publickey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIHOPIgehGFhukJ2ctwMSMXWtXapc1RfRJw0b0PyfPc8Yh7s+NdpiwF9k2Tj3vduQnK127+y/dIk9DSjadn/UisCAwEAAQ==
# 配置 connection-properties，启用加密，配置公钥。
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${publickey}
# 启动ConfigFilter
spring.datasource.druid.filter.config.enabled=true
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=3
#最小连接池数量
spring.datasource.druid.min-idle=3
#最大连接池数量
spring.datasource.druid.max-active=10
#获取连接时最大等待时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
#配置监控页面访问登录名称
spring.datasource.druid.stat-view-servlet.login-username=admin
#配置监控页面访问密码
spring.datasource.druid.stat-view-servlet.login-password=admin
#是否开启慢sql查询监控
spring.datasource.druid.filter.stat.log-slow-sql=true
#慢SQL执行时间 此配置会使得控制台和日志输出error级别的sql信息
#spring.datasource.druid.filter.stat.slow-sql-millis=3000
#校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.druid.validationQuery=SELECT 'X' FROM DUAL
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
spring.datasource.druid.testWhileIdle=true
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
spring.datasource.druid.testOnBorrow=false
#指明是否在归还到池中前进行检验
spring.datasource.druid.testOnReturn=false
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,slf4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据  
spring.datasource.druid.useGlobalDataSourceStat=true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#白名单和黑名单
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
spring.datasource.druid.stat-view-servlet.deny=192.168.1.73
#是否开启重置按钮功能
spring.datasource.druid.stat-view-servlet.reset-enable=false

#mybatis设置以及驼峰映射
mybatis.typeAliasesPackage=com.gousade.pojo
mybatis.mapperLocations=classpath:mappers/*.xml
mybatis.configuration.mapUnderscoreToCamelCase=true
mybatis.configuration.cacheEnabled=false

#修改jsp或者js之后自动执行以下代码可刷新效果
server.servlet.jsp.init-parameters.development=true

#httpClient
http.maxTotal = 100
http.defaultMaxPerRoute = 20
http.connectTimeout=1000
http.connectionRequestTimeout=500
http.socketTimeout=10000
http.staleConnectionCheckEnabled=true

#Mybatis-PageHelper
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true

#println sql in console using debug level 此处和logback-spring.xml中的<logger name="com.gousade.mapper" level="debug"只需配置一个即可
#logging.level.com.gousade.mapper=debug

#logback日志路径配置
logback.logdir=D:\\gousadelogs
logback.appname=gousade